#!/bin/bash

## options
while [[ ".$1" != "." ]]; do
	case "$1" in
		--vim) opt_vim=1;;
		--show) opt_show=1;;
		-*) echo "usage: $0 [--vim] [--show]"; exit 0;;
		*) break;;
	esac
	shift
done

## diffs <reference file in git> <path of real file from $HOME>
diffit() {
	src=${0%/*}/$1
	dst=$HOME/$2
	[[ -f $dst ]] || cp $src $dst
	if [[ -n $opt_vim ]]; then
		diff -q $dst $src || vim -d $dst $src
	elif [[ -n $opt_show ]]; then
		diff -q $dst $src >/dev/null || {
			echo "*** diff $dst $src"
			diff $dst $src
		}
	else
		diff -q $dst $src
	fi
}
## copy src file if doesn't exist in dst directory
copy_if_not_exist() {
	src=$1
	dst=$2
	for f in `ls $src`; do
		[ -d "$f" ] && continue
		if [ ! -f "$dst/$f" ]; then
			cp -v "$src/$f" "$dst/"
		fi
	done
}

## config
diffit ignore .ignore
diffit gitconfig .gitconfig
diffit gitignore .gitignore
diffit tmux.conf .tmux.conf
diffit vimrc .vimrc
diffit psqlrc .psqlrc
diffit bcrc .bcrc
diffit tigrc .tigrc
diffit gemrc .gemrc
## ctags.d
mkdir -p $HOME/.ctags.d
for f in `ls ${0%/*}/ctags.d`; do
	diffit ctags.d/$f .ctags.d/$f
done
copy_if_not_exist $HOME/.ctags.d ${0%/*}/ctags.d
## bash
diffit bash_profile .bash_profile
diffit bashrc .bashrc
diffit inputrc .inputrc
mkdir -p $HOME/.bash
for f in `ls ${0%/*}/bash`; do
	diffit bash/$f .bash/$f
done
## karabiner
if [[ $(uname -s) == "Darwin" ]]; then
	d=karabiner/assets/complex_modifications
	mkdir -p "$HOME/.config/$d"
	for f in `ls ${0%/*}/config/$d`; do
		diffit config/$d/$f .config/$d/$f
	done
	copy_if_not_exist "$HOME/.config/$d" "${0%/*}/config/$d"
fi
## bin
mkdir -p $HOME/bin
for f in `ls ${0%/*}/bin`; do
	[[ -d "${0%/*}/bin/$f" ]] && continue
	diffit bin/$f bin/$f
done
if [[ -d "${0%/*}/bin/$(uname -s)" ]]; then
	for f in `ls ${0%/*}/bin/$(uname -s)`; do
		diffit bin/$(uname -s)/$f bin/$f
	done
fi
[ -d ~/bin/.fzf ] || {
	echo "Installing fzf .."
	git clone https://github.com/junegunn/fzf.git ~/bin/.fzf
	~/bin/.fzf/install
}
pushd ~/bin/.fzf >/dev/null
git fetch >/dev/null 2>&1
$(git diff origin --quiet) || {
	echo "Updating ~/bin/.fzf .."
	git pull
	./install --bin
	cp -v plugin/fzf.vim ~/.vim/plugin/fzf.vim
}
popd >/dev/null
## mutt
if [[ $opt_mutt ]]; then
	diffit muttrc .muttrc
	mkdir -p $HOME/.mutt
	for f in `ls ${0%/*}/mutt`; do
		diffit mutt/$f .mutt/$f
	done
	copy_if_not_exist "$HOME/.mutt" "${0%/*}/mutt"
fi
