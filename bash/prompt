#!/bin/bash
# based on https://gist.github.com/robbles/2211471
# ‚ì• ‚éá ‚ëÇ «Ç ‚Äß ‚óè ‚¶ø ‚Ä£ ¬ß œû œü ‚ÜØ ‚úî ‚úò ‚úñ ‚òÖ Œû ‚âà ‚Åñ ùë£ ‚Üµ

_pwdtail() { #returns the last 2 fields of the working directory
	pwd|awk -F/ '{nlast = NF -1;print $nlast"/"$NF}'
}

source $(dirname $BASH_SOURCE[0])/auto_activate.sh

# https://gist.github.com/laggardkernel/6cb4e1664574212b125fbfd115fe90a4
_chpwd_hook() {
  local f
  # run commands in CHPWD_COMMAND variable on dir change
  if [ "$PREVPWD" != "$PWD" ]; then
	local IFS=$';'
	for f in $CHPWD_COMMAND; do
		"$f"
	done
	unset IFS
  fi
  # refresh last working dir record
  export PREVPWD="$PWD"
}

_prompt_command() {
	code=$?

	# SESSION_TYPE is set in .bashrc

	# bash stores history in mem and writes it at exit but we want shared history b/ all shells:
	# -a Append the 'new' history lines to the history file. These are history lines entered since
	#    the beginning of the current bash session, but not already appended to the history file.
	# -c Clear the history list by deleting all the entries.
	# -r Read the contents of the history file and append them to the current history list.
	history -a
	history -c
	history -r

	local GREEN="\[\033[0;32m\]"
	local CYAN="\[\033[0;36m\]"
	local BCYAN="\[\033[1;36m\]"
	local BLUE="\[\033[0;34m\]"
	local GRAY="\[\033[0;37m\]"
	local DKGRAY="\[\033[1;30m\]"
	local WHITE="\[\033[1;37m\]"
	local RED="\[\033[0;31m\]"
	local YELLOW="\[\033[0;33m\]"
	local BRIGHT="\[\033[38;5;206m\]"
	# return color to Terminal setting for text color
	local DEFAULT="\[\033[0;39m\]"

	#dots='‚¶ø‚¶ø‚¶ø'
	dots='‚óè‚óè‚óè'

	ERR=
	if [ $code -ne 0 ]; then
		ERR='${code}‚Üµ '
	fi

	IDENT=
	if [ "$SESSION_TYPE" == "remote/ssh" ]; then
		IDENT='[\u@\h] '
		dots="${CYAN}${dots}"
	fi

	BRANCH=
	if [ "\$(type -t __git_ps1)" ]; then
		BRANCH="\$(__git_ps1 '‚ÜØ\[$(tput sitm)\]%s\[$(tput ritm)\] ')"
	fi

	JOBS=
	if [ "$(jobs -p)" ]; then
		JOBS="[\j]"
	fi

	## ALL pwd change functions in this block (good for slower commands)
	if [ "$PREVPWD" != "$PWD" ]; then
		_java_auto_activate
		# using pipenv here, see auto_activate.sh script for conda and virtualenv scripts
		_pipenv_auto_activate # (un)sets VENV
	fi

	# set the titlebar to the last 2 fields of pwd
	local u=''
	if [ "$SESSION_TYPE" == "remote/ssh" ]; then
		u="${USER}@"
	fi
	echo -ne "\033]0;[${u}$(hostname -s)] ${PWD##*/}\007"

	export PS1="${RED}${ERR}${BRIGHT}${dots} \
${CYAN}${IDENT}${GREEN}${BRANCH}${BLUE}${VENV}\
${YELLOW}\w${BCYAN}${JOBS}${DEFAULT}\$ "
}

# either: 1) if [ "$PREVPWD" != "$PWD" ]; then .. (in _prompt_command)
#     or: 2) append the command into CHPWD_COMMAND, see _chpwd_hook() above
#CHPWD_COMMAND="${CHPWD_COMMAND:+$CHPWD_COMMAND;}_some_bash_fn"

PROMPT_COMMAND="_prompt_command; _chpwd_hook; ${PROMPT_COMMAND:+$PROMPT_COMMAND}"
